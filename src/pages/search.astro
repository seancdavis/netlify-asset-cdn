---
import { ilike, or } from "drizzle-orm";
import { Search as SearchIcon } from "lucide-react";
import { db } from "../../db/index";
import { uploads } from "../../db/schema";
import Layout from "../components/Layout.astro";
import TagUpdateHandler from "../components/TagUpdateHandler";
import type { Upload } from "../types";

// Get search query from URL
const query = Astro.url.searchParams.get("q") || "";

// Search for files if query exists
let files: Upload[] = [];
let totalResults = 0;

if (query.trim() !== "") {
  let results: Upload[] = [];

  // Check if query starts with "tag:" for tag-specific search
  if (query.startsWith("tag:")) {
    const tagQuery = query.substring(4).trim(); // Remove "tag:" prefix
    if (tagQuery) {
      // Search only in tags, not in filenames
      results = (await db
        .select()
        .from(uploads)
        .where(ilike(uploads.tags, `%${tagQuery}%`))
        .limit(100)) as Upload[];
    }
  } else {
    // Regular search in both filename and tags
    results = (await db
      .select()
      .from(uploads)
      .where(
        or(
          ilike(uploads.filename, `%${query}%`),
          ilike(uploads.tags, `%${query}%`)
        )
      )
      .limit(100)) as Upload[];
  }

  files = results;
  totalResults = results.length;
}
---

<Layout>
  <section class="mt-10 w-full max-w-2xl">
    <div class="mb-6">
      <h2 class="text-2xl font-semibold mb-2">Search Results</h2>
      <p class="text-gray-600">
        {
          query
            ? totalResults === 0
              ? `No files found for "${query}"`
              : totalResults === 1
                ? `1 file found for "${query}"`
                : `${totalResults} files found for "${query}"`
            : "Enter a search term to find files"
        }
      </p>
      {
        query.startsWith("tag:") && (
          <p class="text-sm text-blue-600 mt-1">
            Searching only in tags (use "tag:your-tag" to search specific tags)
          </p>
        )
      }
    </div>

    <ul class="space-y-4">
      {
        !query ? (
          <li class="text-gray-500 bg-white p-8 rounded shadow border border-gray-200 text-center">
            <SearchIcon className="w-12 h-12 mx-auto mb-4 text-gray-300" />
            <p>Ready to search</p>
            <p class="text-sm text-gray-400 mt-2">
              Enter a search term in the header to find files
            </p>
          </li>
        ) : (
          <TagUpdateHandler
            client:load
            files={files}
            emptyMessage="No files match your search."
            emptySubMessage="Try a different search term"
          />
        )
      }
    </ul>
  </section>
</Layout>
