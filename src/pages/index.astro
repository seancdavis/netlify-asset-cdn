---
import "../styles/global.css";
const uploadStatus = Astro.url.searchParams.get("upload");
import { db } from "../../db/index";
import { uploads } from "../../db/schema";

// Query all uploads, newest first
const files = (
  await db
    .select()
    .from(uploads)
    .orderBy((u) => u.uploaded_at)
).reverse();

// Helper to check if a file is an image
function isImage(filename: string) {
  return /\.(jpg|jpeg|png|gif|webp|bmp|svg)$/i.test(filename);
}
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro</title>
  </head>
  <body
    class="min-h-screen bg-gray-50 flex flex-col items-center justify-center p-4"
  >
    <h1 class="text-4xl font-bold mb-8 text-blue-700">Astro Asset Upload</h1>
    {
      uploadStatus === "success" && (
        <p class="mb-4 px-4 py-2 rounded bg-green-100 text-green-800 border border-green-300">
          File uploaded successfully!
        </p>
      )
    }
    {
      uploadStatus === "error" && (
        <p class="mb-4 px-4 py-2 rounded bg-red-100 text-red-800 border border-red-300">
          Failed to upload file.
        </p>
      )
    }
    <form
      action="/api/upload"
      method="post"
      enctype="multipart/form-data"
      class="flex flex-col gap-4 bg-white p-6 rounded shadow-md w-full max-w-sm border border-gray-200"
    >
      <label for="file" class="font-medium text-gray-700">Upload a file:</label>
      <input
        type="file"
        id="file"
        name="file"
        required
        class="file:mr-4 file:py-2 file:px-4 file:rounded file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100"
      />
      <button
        type="submit"
        class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded transition"
        >Upload</button
      >
    </form>
    <section class="mt-10 w-full max-w-2xl">
      <h2 class="text-2xl font-semibold mb-4">Uploaded Files</h2>
      <ul class="space-y-4">
        {
          files.length === 0 && (
            <li class="text-gray-500">No files uploaded yet.</li>
          )
        }
        {
          files.map((file) => (
            <li class="flex items-center gap-4 bg-white p-4 rounded shadow border border-gray-200">
              {isImage(file.filename) ? (
                <img
                  src={`/api/upload/${file.blob_key}`}
                  alt={file.filename}
                  class="w-16 h-16 object-cover rounded"
                />
              ) : (
                <span class="w-16 h-16 flex items-center justify-center bg-gray-100 rounded text-3xl text-gray-400">
                  ðŸ“„
                </span>
              )}
              <div>
                <div class="font-medium">{file.filename}</div>
                <div class="text-xs text-gray-500">
                  Uploaded at {new Date(file.uploaded_at).toLocaleString()}
                </div>
              </div>
            </li>
          ))
        }
      </ul>
    </section>
  </body>
</html>
